# rm /home/linuxconsole25/ydfs/src/icu/source/ydfs-multilib-buildt

export PYTHON=/usr/bin/python3
#export PYTHON2=/usr/bin/python
unset PYTHONPATH
export PATH=$HOME/llvm-multilib/bin/:$HOME/multilib/bin:$HOME/x86_64/bin/:$PATH
export PKG_CONFIG_PATH=$HOME/multilib/lib/pkgconfig:$HOME/multilib/lib32/pkgconfig:$HOME/multilib/share/pkgconfig:/usr/share/pkgconfig/
export LD_LIBRARY_PATH=$HOME/multilib/lib:$HOME/multilib/lib32:$HOME/x86_64/lib/:$LD_LIBRARY_PATH
export CC="gcc -m32"
export CXX="g++ -m32"
export CPPFLAGS="-I$HOME/multilib/include"
export CFLAGS="-I$HOME/multilib/include"
export LDFLAGS="-L$HOME/multilib/lib -L$HOME/multilib/lib32 -Wl,-rpath,$HOME/multilib/lib "

install -d $HOME/multilib
install -d $HOME/$ARCH/lib32 || exit 1

install -d $HOME/multilib/include

[ ! -e $HOME/multilib/lib32 ] && ln -s $HOME/$ARCH/lib32 $HOME/multilib/lib32
[ ! -e $HOME/multilib/lib ] && ln -s $HOME/$ARCH/lib32 $HOME/multilib/lib

# libFS-1 libdmx- \

PKGMULTILIB="zlib-1 libunwind libunistring libtasn1 libidn gmp nettle xorgproto alsa-lib ncurses readline libxcrypt pcre- pcre2 tcl8 sqlite libpng-1.2 libpng-1.6 libffi p11-kit zstd gnutls openssl-1 curl elfutils dbus-1 glib-2 freetype-2 icu harfbuzz freetype-2 json-c fontconfig-2 \
xtrans libXau xcb-proto libxcb \
libX11-1 \
libXext-1 \
libICE-1 \
libSM-1 \
libXScrnSaver-1 \
libXt-1 \
libXmu-1 \
libXpm-3 \
libXaw-1 \
libXfixes-6 \
libXcomposite-0 \
libXrender-0 \
libXcursor-1 \
libXdamage-1 \
libfontenc-1 \
libXft-2 \
libXi-1 \
libXinerama-1 \
libXrandr-1 \
libXres-1 \
libXtst-1 \
libXv-1 \
libXvMC-1 \
libXxf86dga-1 \
libXxf86vm-1 \
libpciaccess-0 \
libxkbfile-1 \
libxshmfence-1 pixman cairo-1 libdrm libxml libgpg-error libgcrypt libxslt llvm elfutils libvdpau kmod eudev tiff-4 libjpeg-turbo gdk-pixbuf flac libsndfile speex opus-1 opusfile sbc check libglvnd wayland-1 lm-sensors Vulkan-Loader mesa-2 expat glu libsamplerate SDL2-2 openal-soft fribidi pango-1 atk-2 \
unixODBC libtheora libcap-2 at-spi2-core at-spi2-atk libepoxy libxkbcommon libgudev lcms2 libusb-1 libgusb libtirpc libnsl Linux-PAM duktape polkit-1 colord glib-networking libpsl brotli e2fsprogs krb5 libsoup-2 rest json-glib gtk+-3 gstreamer-1 libgudev bzip2 libva-2 gst-plugins-base" 

for PKG in $PKGMULTILIB
do

  [ "$PKG" = "llvm" ] && install -d $HOME/ydfs/src/$PKG && continue
  echo -n "Test $PKG dir " # && sleep 1
  ls $HOME/ydfs/src/$PKG* |grep $HOME/ydfs/src/$PKG 
  ls $HOME/ydfs/src/$PKG* |grep $HOME/ydfs/src/$PKG |wc
COUNT=`ls $HOME/ydfs/src/$PKG* |grep $HOME/ydfs/src/$PKG |wc|tr -s ' '|cut -d' ' -f2`
  [ "$COUNT" = "0" ] || exit $?
done

for PKG in $PKGMULTILIB
do
# [ "$PKG" = "soxr" ] && continue

  echo -n "$PKG " # && sleep 1
  cd $HOME/ydfs/src/$PKG* || exit $?

  if [ ! -L $HOME/multilib/lib32 ]
  then
    echo "$PKG : $HOME/multilib/lib32 is not a link"
    cp -fR $HOME/multilib/lib32/* $HOME/$ARCH/lib32
    rm -fR $HOME/multilib/lib32/
    ln -s $HOME/$ARCH/lib32 $HOME/multilib/lib32
  else
    echo "$PKG : $HOME/multilib/lib32 is a link"
  fi

  if [ ! -L $HOME/multilib/lib ]
  then
    echo "$PKG : $HOME/multilib/lib is not a link"
    cp -fR $HOME/multilib/lib/* $HOME/$ARCH/lib32
    rm -fR $HOME/multilib/lib
    ln -s $HOME/$ARCH/lib32 $HOME/multilib/lib
  else
    echo "$PKG : $HOME/multilib/lib32 is a link"
  fi

  [ "$1" != "force" ] && [ -e ydfs-multilib-buildt ] && cd .. && continue
  [ "$1" != "force" ] && [ -e unix/ydfs-multilib-buildt ] && cd .. && continue
  [ "$1" != "force" ] && [ -e source/ydfs-multilib-buildt ] && cd .. && continue
  [ "$1" != "force" ] && [ -e ncurses-build/ydfs-multilib-buildt ] && cd .. && continue
  pwd && echo "Start build" && sleep 2
  case $PKG in
    acl )
	cp -fR $HOME/x86_64/include/attr $HOME/multilib/include
	;;
  esac
  case $PKG in
    mesa-2 )
	# export CC="gcc -m32"
  	# export CXX="g++ -m32"
	mkdir build-32
	cd build-32
	# [ ! -e env.1 ] && env > env.1 && echo "Quit building .. " && exit 23 # We need to clear ENV VAR
	echo "Start config mesa .. "
	# env > env.2
	echo "[binaries]
llvm-config = '$HOME/llvm-multilib/bin/llvm-config' "> crossfile.ini
        # PYTHONPATH="" 
	echo "meson ../ --prefix=$HOME/multilib --libdir=$HOME/multilib/lib32 --native-file crossfile.ini \
    -D b_lto=false \
    -D b_ndebug=true \
    -D platforms=x11,wayland \
    -D dri-drivers=i915,i965,r100,r200,nouveau \
    -D gallium-drivers=r300,r600,radeonsi,nouveau,virgl,svga,swrast,iris,crocus,zink \
    -D vulkan-drivers=amd,intel \
    -D vulkan-layers=device-select,intel-nullhw,overlay \
    -D swr-arches=avx,avx2 \
    -D dri3=enabled \
    -D egl=enabled \
    -D gallium-extra-hud=true \
    -D gallium-nine=true \
    -D gallium-omx=disabled \
    -D gallium-opencl=icd \
    -D gallium-va=enabled \
    -D gallium-vdpau=enabled \
    -D gallium-xa=enabled \
    -D gallium-xvmc=disabled \
    -D gbm=enabled \
    -D gles1=disabled \
    -D gles2=enabled \
    -D glvnd=true \
    -D glx=dri \
    -D libunwind=enabled \
    -D llvm=enabled \
    -D osmesa=true \
    -D shared-glapi=enabled \
    -D microsoft-clc=disabled \
    -D lmsensors=enabled \
    -D valgrind=disabled" > build-mesa32
    #bash
    # $HOME_DIBAB/scripts/clear-env && . $HOME/env
unset ACLOCAL
unset ACLOCAL_FLAGS
unset CMAKE_INCLUDE_PATH
unset CMAKE_LIBRARY_PATH
unset CMAKE_PREFIX_PATH
unset CXXFLAGS
unset MAKE
     #	env | sort > /tmp/$$.env
    bash build-mesa32 > ydfs-conf || exit 1
	;;

    lm-sensors )
	sed -i "s@$HOME/$ARCH@$HOME/multilib@g" Makefile
	sed -i 's/CC := gcc/CC := gcc -m32/' Makefile
        ;;
    zstd )
	sed -i "s@$HOME/$ARCH@$HOME/multilib@g" */Makefile
        ;;
    libcap-2 )
	sed -i 's@$(HOME)/$(ARCH)@$(HOME)/multilib@g' Make.Rules
	sed -i 's@LIBDIR=$(lib_prefix)/$(lib)@LIBDIR=$(lib_prefix)/lib32@g' Make.Rules
	sed -i 's@$(HOME)/$(ARCH)@$(HOME)/multilib@g' libcap/Makefile
	sed -i 's/CC := $(CROSS_COMPILE)gcc/CC := gcc -m32/' Make.Rules
	# sed -i "s@$HOME/$ARCH@$HOME/multilib@g" libcap/*.pc
        ;;
    duktape )
	rm libduktape*
	rm duktape.pc
	cp Makefile.sharedlibrary Makefile
	sed -i "s@/usr/local@$HOME/multilib@" Makefile
	sed -i 's/CC := gcc/CC := gcc -m32/' Makefile
        ;;
    bzip2 | zstd )
	echo "No config for $PKG"
        ;;
    polkit-1 )
	[ ! -e $HOME/multilib/include/security ] && ln -s $HOME/multilib/include/ $HOME/multilib/include/security
	mkdir build-32
	cd build-32
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib --libdir=$HOME/multilib/lib32 -D os_type=redhat \
    -D tests=true \
    -D introspection=false || exit 1
        ;;
    kmod )
	./configure --prefix=$HOME/multilib --disable-manpages
	;;
    pixman )
	./configure --prefix=$HOME/multilib --disable-gtk
	;;
    libtirpc )
	./configure --prefix=$HOME/multilib --disable-gssapi
	;;
    elfutils )
	./configure --prefix=$HOME/multilib --disable-debuginfod
	;;
    curl )
	./configure --prefix=$HOME/multilib --with-ssl --without-gnutls
	;;
    libxslt )
	./configure --prefix=$HOME/multilib --without-python
	;;
    libgcrypt )
	 sed 's:path="amd64":path="i586 i386":' -i mpi/config.links
  	./configure --prefix=$HOME/multilib --disable-O-flag-munging --disable-asm --disable-static --disable-padlock-support --enable-shared
	;;

    brotli )
	mkdir build32
	cd build32
  	cmake -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=$HOME/multilib \
    -DCMAKE_INSTALL_LIBDIR=lib \
	-DBUILD_SHARED_LIBS=True .. || exit 2
        touch ../ydfs-multilib-buildt
	;;

    gnutls )
  	./configure  --build=i686-pc-linux-gnu --prefix=$HOME/multilib --with-zlib \
    --with-included-unistring \
    --disable-static \
    --disable-guile \
    --without-brotli \
    --disable-valgrind-tests --disable-doc || exit $?
	;;
    libtheora )
	./configure  --build=i686-pc-linux-gnu --prefix=$HOME/multilib --host=i686-pc-linux-gnu
	;;
    libunwind )
	 export CC="gcc -m32"
	 export CXX="g++ -m32"
	./configure  --build=i686-pc-linux-gnu --prefix=$HOME/multilib --host=i686-pc-linux-gnu \
    --disable-documentation 
	;;
    nettle )
	 export CC="gcc -m32"
	 export CXX="g++ -m32"
	./configure  --build=i686-pc-linux-gnu --prefix=$HOME/multilib --enable-shared --with-include-path=$HOME/multilib/lib32/gmp
	;;
    gmp )
	make clean
	export ABI=32
  	./configure  --enable-fat --enable-cxx --libdir=$HOME/multilib/lib32 --includedir=$HOME/multilib/lib32/gmp  --prefix=$HOME/multilib || exit $?
	;;
    libxml )
  	./configure --without-python --prefix=$HOME/multilib || exit $?
	;;
    alsa-lib )
  	./configure --disable-python --prefix=$HOME/multilib || exit $?
	;;
    e2fsprogs )
	./configure --prefix=$HOME/multilib/  --enable-elf-shlibs \
    	--with-crond-dir=$HOME/multilib/etc/cron.d  --disable-libblkid --disable-libuuid --disable-uuidd --disable-fsck --with-systemd-unit-dir=$HOME/$ARCH/lib/systemd/system
	sleep 3
	echo "E2FS"
  	# sed -i "s|CROND_DIR = /etc/cron.d|CROND_DIR = $HOME/multilib/etc/cron.d|" Makefile
	;;
    ncurses )

	 mkdir ncursesw-build
	 mkdir ncurses-build

  cd ncursesw-build
  ../configure --prefix=$HOME/multilib \
     --with-shared --with-normal --without-debug --without-ada \
     --enable-widec
  make
  make install
	cd ..
  cd ncurses-build
  ../configure --prefix=$HOME/multilib \
    --with-shared --with-normal --without-debug --without-ada 
    ;;
    tcl8* )
	cd unix
  	./configure --prefix=$HOME/multilib || exit $?
    ;;
    fontconfig* )
	./configure --prefix=$HOME/multilib --disable-docs || exit $?
    ;;
    pcre-* )
	./configure --prefix=$HOME/multilib --enable-unicode-properties || exit $?
    ;;
    icu )
	cd source
  	./configure --prefix=$HOME/multilib || exit $?
    ;;
    dbus-1 )
  	./configure --prefix=$HOME/multilib  --disable-verbose-mode --disable-static --disable-tests --disable-asserts --disable-systemd || exit $?
    ;;
    freetype-2* )
	if [ -e $HOME/multilib/lib/libharfbuzz.so ]
	then
  	  ./configure --prefix=$HOME/multilib || exit $?
	else
  	  ./configure --prefix=$HOME/multilib --with-harfbuzz=no || exit $?
	fi
    ;;
    harfbuzz* )
	./configure --prefix=$HOME/multilib -disable-silent-rules --with-graphite2=no --without-cairo || exit $?
    ;;
    readline )
	sed -i 's|-Wl,-rpath,$(libdir) ||g' support/shobj-conf
  	./configure --prefix=$HOME/multilib || exit $?
    ;;
    openssl* )
	./Configure --prefix=$HOME/multilib --openssldir=$HOME/multilib/etc/ssl --libdir=lib32 \
		shared zlib no-ssl3-method \
		linux-elf \
		"-Wa,--noexecstack ${CPPFLAGS} ${CFLAGS} ${LDFLAGS}"

	make MAKEDEPPROG="${CC}" depend
    ;;
    llvm )
	ln -s $HOME/multilib/lib/libffi.so.8 $HOME/multilib/lib/libffi.so.6
	[ -e $HOME/llvm-multilib ] && continue
	cd $HOME
	[ ! -e llvm11-multilib.tar.gz ] && wget http://jukebox.linuxconsole.org/toolchains/llvm11-multilib.tar.gz
	tar xzvhf llvm11-multilib.tar.gz
	#	$HOME_DIBAB/scripts/build-llvm-clang
    ;;
    cairo-1* )
	# echo "Disable Test .." && sleep 2
  	sed -i "s| test perf| perf|g" Makefile.am
	# echo "Done" && sleep 2
  	# ./configure --prefix=$HOME/multilib --enable-pdf=no --disable-pdf --disable-full-testing --disable-static --disable-test-suite || exit $?
	autoreconf
  	./configure --prefix=$HOME/multilib --disable-full-testing --disable-static --disable-test-suite || exit $?
    ;;
    poppler )
  	./configure --prefix=$HOME/multilib --disable-poppler-qt4 --disable-cairo-output || exit $?
    ;;
    flac )
  	./configure --prefix=$HOME/multilib --disable-sse || exit $?
    ;;
    gtk+-3 )
  	./configure --prefix=$HOME/multilib --disable-cups || exit $?
    ;;
    check | libjpeg-turbo )
  	# ./configure --prefix=$HOME/multilib --without-simd || exit $?
	mkdir build32
	 cd build32
	export CC="gcc -m32 -mstackrealign"
  	export CXX="g++ -m32 -mstackrealign"
  	cmake .. \
    	-DCMAKE_INSTALL_PREFIX=$HOME/multilib 
        touch ../ydfs-multilib-buildt
	;;
    soxr )
	mkdir build32
	 cd build32
	export CC="gcc -m32 -mstackrealign"
  	export CXX="g++ -m32 -mstackrealign"
  	cmake .. \
    	-DCMAKE_INSTALL_PREFIX=$HOME/multilib -DALSOFT_EXAMPLES=OFF
        touch ../ydfs-multilib-buildt
	;;
    openal-soft )
	export CC="gcc -m32 -mstackrealign"
  	export CXX="g++ -m32 -mstackrealign"
	cmake -DCMAKE_INSTALL_PREFIX=$HOME/multilib -Bbuild \
    -DCMAKE_BUILD_TYPE=None -DALSOFT_NO_CONFIG_UTIL=ON \
    -DCMAKE_INSTALL_LIBDIR=lib32
        cmake --build build
  	cmake .. \
	;;
    glib-2)
	patch -p1 < $HOME_DIBAB/packages/patches/lib32-glib2.diff
	patch -p1 < $HOME_DIBAB/packages/patches/glib2-multilib.diff
	export CC="gcc -m32 -mstackrealign"
  	export CXX="g++ -m32 -mstackrealign"
	sleep 5
	mkdir build-32
	cd build-32
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib --libdir=$HOME/multilib/lib32 -D b_lto=false \
    -D b_pie=false \
    -D selinux=disabled \
     || exit 1
	;;
    libglvnd)
	mkdir build-32
	cd build-32
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib --libdir=$HOME/multilib/lib32    -D headers=false \
    -D gles1=false || exit 1
	;;
    gst-plugins-base )
	mkdir build-32
	cd build-32
        PATH=$PATH:$HOME/$ARCH/sbin PYTHONPATH="" meson ../ --prefix=$HOME/multilib --libdir=lib32 \
    --libexecdir=lib32 \
    -D doc=disabled \
    -D tremor=disabled \
    -D orc=disabled \
    -D examples=disabled \
    -D gl-graphene=disabled \
    -D gobject-cast-checks=disabled \
    -D introspection=disabled  || exit 1
#ninja reconfigure
#bash
	;;
    gstreamer-1 )
	mkdir build-32
	cd build-32
        PATH=$PATH:$HOME/$ARCH/sbin PYTHONPATH="" meson ../ --prefix=$HOME/multilib --libdir=lib32 \
    --libexecdir=lib32 \
    -D doc=disabled \
    -D ptp-helper-permissions=capabilities \
    -D dbghelp=disabled \
    -D gobject-cast-checks=disabled \
    -D bash-completion=disabled \
    -D introspection=disabled  || exit 1
	;;
    colord )
	mkdir build-32
	cd build-32
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib --libdir=$HOME/multilib/lib32 -Dman=false -Dintrospection=false -Dsystemd=false -D libcolordcompat=false \
    -D sane=false \
    -D vapi=false \
    -D print_profiles=false \
    -D daemon_user=colord || exit 1
	;;
     libgusb )
	mkdir build-32
	cd build-32
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib --libdir=$HOME/multilib/lib32 -Ddocs=false \
    -Dintrospection=false \
    -Dvapi=false || exit 1
	;;
     p11-kit )
	mkdir build-32
	cd build-32
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib -Dsystemd=disabled --libdir=$HOME/multilib/lib32 || exit 1
	;;
     gdk-pixbuf)
	mkdir build-32
	cd build-32
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib -Dman=false -Dintrospection=disabled --libdir=$HOME/multilib/lib32 || exit 1
	;;
     pulseaudio-14 )
	mkdir build-32
	cd build-32
	echo "Pulse audio needs libtool32"
	wget https://ftp.gnu.org/gnu/libtool/libtool-2.4.7.tar.gz && tar xzvf libtool-2.4.7.tar.gz && cd libtool-2.4.7 && ./configure --prefix=$HOME/multilib && make && make install && cd ..
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib -Dudevrulesdir=$HOME/$ARCH/lib/udev/rules.d -Dgtk=disabled -Djack=disabled -Dorc=disabled -Dfftw=disabled -Dbluez5=false -Dlirc=disabled -Delogind=disabled -Ddatabase=simple -Davahi=disabled -Dsystemd=disabled --libdir=$HOME/multilib/lib32 || exit 1
	;;
     wayland-1 )
	mkdir build-32
	cd build-32
        PYTHONPATH="" meson ../ -Dbuildtype=release -Ddocumentation=false --prefix=$HOME/multilib --libdir=$HOME/multilib/lib32 || exit 1
	;;
     at-spi2-core )
	mkdir build-32
	cd build-32
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib -Dintrospection=no --libdir=$HOME/multilib/lib32 || exit 1
	;;
     libgudev | libsoup-2 | pango-1 )
	mkdir build-32
	cd build-32
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib -Dintrospection=disabled --libdir=$HOME/multilib/lib32 || exit 1
	;;
     json-glib | atk-2 )
	mkdir build-32
	cd build-32
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib -Dintrospection=false --libdir=$HOME/multilib/lib32 || exit 1
	;;
     util-linux | glib-networking | gst-plugins-base | at-spi2-core | at-spi2-atk | libxkbcommon | libepoxy | libdrm)
	mkdir build-32
	cd build-32
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib --libdir=$HOME/multilib/lib32 || exit 1
	;;

	Vulkan-Loader)
  export ASFLAGS=--32
  export CFLAGS=-m32
  export CXXFLAGS=-m32                                                                                                                                                                                                            
  export PKG_CONFIG_PATH="/usr/lib32/pkgconfig" 

  mkdir build-32
  cd build-32
  cmake -DCMAKE_INSTALL_PREFIX=$HOME/multilib \
    -DVULKAN_HEADERS_INSTALL_DIR=$HOME/$ARCH/include \
    -DCMAKE_INSTALL_SYSCONFDIR=/etc \
    -DVulkanHeaders_INCLUDE_DIR=$HOME/$ARCH/include \
    -DVulkanRegistry_DIR=$HOME/$ARCH/share/vulkan/registry \
    -DCMAKE_INSTALL_LIBDIR=lib32 \
    -DCMAKE_INSTALL_DATADIR=/share \
    -DCMAKE_SKIP_RPATH=True \
    -DBUILD_TESTS=Off \
    -DBUILD_WSI_XCB_SUPPORT=On \
    -DBUILD_WSI_XLIB_SUPPORT=On \
    -DBUILD_WSI_WAYLAND_SUPPORT=On \
    -DCMAKE_BUILD_TYPE=Release \
    ..
	;;

    krb5 )
	[ -e krb5-1.18.5/src/clients/kinit/kinit ] && continue
	#then
	wget https://web.mit.edu/kerberos/dist/krb5/1.18/krb5-1.18.5.tar.gz
	tar xzvf krb5-1.18.5.tar.gz
	cd krb5-1.18.5
	wget https://raw.githubusercontent.com/archlinux/svntogit-community/packages/lib32-krb5/trunk/krb5-config_LDFLAGS.patch
	patch -p1 < krb5-config_LDFLAGS.patch
	sed -i "/KRB5ROOT=/s/\/local//" src/util/ac_check_krb5.m4
	cd src
	#mkdir build32
	#cd build32
	LDFLAGS="-L$HOME/multilib/lib -L$HOME/multilib/lib32 " CFLAGS="$CFLAGS -fPIC -fno-strict-aliasing -fstack-protector-all" ./configure --prefix=$HOME/multilib  --enable-shared \
               --with-system-et \
               --with-system-ss \
               --disable-rpath \
               --without-tcl \
               --enable-dns-for-realm \
               --without-ldap \
               --without-system-verto  --with-crypto-impl=openssl || exit $?
	#else
	#  cd krb5-1.18.5/src
	#fi
    ;;
    * )
	pwd
  	./configure --prefix=$HOME/multilib || exit $?
    ;;
  esac

  echo "Run make clean" 
  make clean
  case $PKG in
    libxslt )
	touch doc/xsltproc.1
	;;
    bzip2 )
        make -f Makefile-libbz2_so || exit 17
	install -d $HOME/multilib/lib
	cp libbz2.so.1.0 $HOME/multilib/lib
	ln -s libbz2.so.1.0 $HOME/multilib/lib/libbz2.so
	;;
    util-linux | json-glib | libgudev | glib-networking | libsoup-2 | polkit-1 | wayland-1 | pulseaudio-14 | p11-kit | gst-plugins-base|polkit-0|libgusb|colord|at-spi2-core|at-spi2-atk | libxkbcommon | libepoxy | gstreamer-1 | glib-2 | libdrm | mesa-2 | libglvnd | pango-1 | atk-2 | gdk-pixbuf)
  echo "Run Ninja" 
        PYTHONPATH="" ninja || exit 1
	;;
    readline )
	make SHLIB_LIBS=-lncurses
	;;
    llvm )
	;;
    openal-soft )
	cd build
	make
	;;
    * )
  	echo "Run make "
  	make || exit $?
	;;
  esac

  echo "Run make 2"
  case $PKG in
   zstd )
	CC="gcc -m32" CXX="g++ -m32" make
	;;
   llvm )
	;;
   util-linux | json-glib | libgudev | glib-networking | libsoup-2 | polkit-1 | wayland-1 | pulseaudio-14 | p11-kit | gst-plugins-base|polkit-0|libgusb|colord|+-3|at-spi2-core|at-spi2-atk|libxkbcommon | libepoxy | gstreamer-1 | glib-2 | mesa-2 | libdrm | libglvnd | pango-1 | atk-2 | gdk-pixbuf )
  	echo "Do nothing for $PKG"
	;;
    * )
  	echo "Make 2 for $PKG"
  	make || exit $?
	;;
  esac

  case $PKG in
    zstd )
  	make install || exit $?
	[ ! -e $HOME/multilib/lib/pkgconfig/libzstd.pc ] && cp lib/libzstd.pc $HOME/multilib/lib/pkgconfig/libzstd.pc 
	;;
    llvm-build* | Vulkan-Loader )
  	make install || exit $?
	cd ..
	;;
    llvm )
	;;
    openal-soft )
  	make install || exit $?
	cd ..
	;;
    mesa-2)
        PYTHONPATH="" ninja install || exit 1
    cp $HOME/x86_64/include/GL/gl* $HOME/multilib/include/GL/
    cp -a $HOME/x86_64/include/KHR/ $HOME/multilib/include/
    cp -a $HOME/x86_64/include/EGL/ $HOME/multilib/include/

	cd ..
	;;
    util-linux | json-glib | libgudev | glib-networking | libsoup-2 | polkit-1 | wayland-1 | pulseaudio-14 | p11-kit | gst-plugins-base|polkit-0|libgusb|colord|at-spi2-core|at-spi2-atk|libxkbcommon | libepoxy | gstreamer-1 | glib-2 | libdrm | libglvnd | pango-1 | atk-2 | gdk-pixbuf)
  	echo "Run ninja install "
        PYTHONPATH="" ninja install || exit 1
	cd ..
	;;
    * )
  	echo "Run make install "
  	VERBOSE=1 make install || exit $?
        [ -e getfacl/getfacl.c ] && make install-lib install-dev
	[ -e getfattr/getfattr.c ] && make install-lib install-dev
	;;
  esac
  touch ydfs-multilib-buildt
  cd ..
done

cp -a /usr/lib32/* $HOME/$ARCH/lib32
cp -a /usr/lib32 $HOME/$ARCH/lib32-root
cp $HOME/llvm-multilib/lib32/libLLVM-11.so $HOME/$ARCH/lib32 || exit 1

ls $HOME/$ARCH/lib32/*.a |while read file
do
  echo  $file
  rm  $file
done

echo
